openapi: 3.0.0
servers: []
info:
  version: "0.1.0"
  title: Hotel definitions
  description: Object definitions for hotel API
paths: {}
components:
  schemas:
  # WT-Index formats
    HotelOnChain:
      title: WT-Index hotel record
      description: Hotel record in WT-Index smart contract
      type: object
      required:
      - address
      - manager
      - dataUri
      - created
      properties:
        address:
          description: Ethereum address of the hotel
          $ref: '#/components/schemas/EthereumAddressType'
        manager:
          description: Ethereum address of the manager wallet
          $ref: '#/components/schemas/EthereumAddressType'
        dataUri:
          description: URI of the Hotel data index (pointing off-chain)
          $ref: '#/components/schemas/UriType'
        created:
          description: Number of a block when the hotel was created
          type: integer
          
  # Off chain data formats  
    HotelDataIndex:
      title: Hotel data index
      description: Landing index for hotel resources. Link to this document is stored in WT-Index smart contract hotel record
      type: object
      required:
      - dataFormatVersion
      - descriptionUri
      properties:
        dataFormatVersion:
          description: Version number indicating the data format specification version.
          type: string
          format: semver
          maxLength: 20
        descriptionUri:
          description: URI pointing to the HotelDescription data resource
          $ref: '#/components/schemas/UriType'
        ratePlansUri:
          description: URI pointing to RatePlans data resource
          $ref: '#/components/schemas/UriType'
        availabilityUri:
          $ref: '#/components/schemas/UriType'
          description: URI pointing to Availability data resource
        notificationsUri:
          $ref: '#/components/schemas/UriType'
          description: URI pointing to an instance of the WT Update service.
        bookingUri:
          $ref: '#/components/schemas/UriType'
          description: URI pointing to an instance of the WT Booking service.

    HotelDescription:
      title: Hotel description
      allOf:
        - $ref: '#/components/schemas/HotelDescriptionBase'
        - type: object
          required:
          - name
          - description
          - contacts
          - address
          - timezone
          - currency
          - updatedAt
          - defaultCancellationAmount
    HotelDescriptionBase:
      title: Hotel description base definition
      description: Basic properties of hotel
      type: object
      properties:
        location:
          description: Geo-location in GPS format
          $ref: '#/components/schemas/Location'
        name:
          description: Name of the hotel to display to users
          $ref: '#/components/schemas/NameType'
        description:
          description: Short text description of the hotel to show to users.
          $ref: '#/components/schemas/DescriptionType'
        roomTypes:
          description: Room types in the hotel
          $ref: '#/components/schemas/RoomTypes'
        contacts:
          type: object
          description: List of contacts
          required:
          - general
          properties:
            general:
              description: Primary contact
              $ref: '#/components/schemas/Contact'
        address:
          $ref: '#/components/schemas/Address'
        timezone:
          $ref: '#/components/schemas/TimezoneType'
        currency:
          $ref: '#/components/schemas/CurrencyType'
        images:
          description: Images (web browser compatible)
          type: array
          items:
            $ref: '#/components/schemas/UriType'
        amenities:
          description: Hotel products / services provided for free to guests
          type: array
          items:
            $ref: '#/components/schemas/HotelAmenityItem'
        updatedAt:
          type: string
          description: Date-time when the data was last changed. Used by consumers to handle incremental updates and caching.
          format: date-time
        defaultCancellationAmount:
          type: number
          format: float
          description: Cost of cancellation in percents of the final price, 100 means non refundable. This is a default amount of how much money will the hotel keep if no other cancallation policy is applicable.
          example: 25
        cancellationPolicies:
          description: A list of policies under which it is possible to cancel a reservation.
          type: array
          items:
            $ref: '#/components/schemas/CancellationPolicy'

  # inventory
    RoomTypes:
      type: object
      description: Object where property names are ID of room type and values are the RoomType 
      additionalProperties:
        $ref: '#/components/schemas/RoomType'
    RoomType:
      type: object
      required:
      - name
      - description
      - occupancy
      - totalQuantity
      - updatedAt
      properties:
        name:
          description: Name of the room type to show to users
          $ref: '#/components/schemas/NameType'
        description:
          description: Room type description in plain text
          $ref: '#/components/schemas/DescriptionType'
        totalQuantity:
          type: integer
          format: int32
        occupancy:
          type: object
          required:
          - max
          properties:
            min:
              type: integer
              format: int32
              description: Minimal number of occupants to rent the room.
              default: 1
              example: 1
            max:
              type: integer
              format: int32
              description: Maximal number of occupants to rent the room.
              example: 3
        amenities:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/RoomAmenityItem'
            example: TV
        images:
          type: array
          minItems: 0
          maxItems: 30
          uniqueItems: true
          items:
            $ref: '#/components/schemas/UriType'
            description: image uri
            example: 'https://example.com/my-image.jpg'
        updatedAt:
          type: string
          format: date-time
          description: Date-time when the data was last changed. Used by consumers to handle incremental updates and caching.
        properties:
          type: object
          description: Other properties used for filtering and/or categorization of the room types
          properties:
            nonSmoking:
              description: Whether there are any non smoking rooms of the type
              type: string
              enum:
              - some
              - all
              - none
              
  # pricing
    RatePlans:
      type: object
      description: Property names are ID of rate plan and the values is the rate plan description
      additionalProperties:
        $ref: '#/components/schemas/RatePlan'
    RatePlan:
      description: |
        Rate plan for specified room types. All prices are meant for a single room for a single night for a single person.
        
        Algorithm to calculate price - for now, the result should always be the cheapest price for a consumer.
        - choose the currency you want to compute the price in
        - pick the right ratePlan(s) based on the chosen currency, availableForTravel field and provided booking dates
        - check restrictions and drop rate plans that the booking doesn't meet
        - for every rate plan as rp_i
          - for every person as p_j
              apply the best of any fitting price modifiers (pro-consumer strategy, this will change)
              multiply the computed rate by length of stay
          - store the final price for rp_i
        - compare all final prices and pick the cheapest (pro-consumer strategy, this might change)
        
      type: object
      required:
      - name
      - updatedAt
      - price
      - roomTypeIds
      properties:
        name:
          description: Name of the rate plan to show to users
          $ref: '#/components/schemas/NameType'
        description:
          description: Rate plan description in plain text
          $ref: '#/components/schemas/DescriptionType'
        currency:
          description: Currency in which are all the prices of this rate plan. If not set, the hotel currency setting will be used.
          $ref: '#/components/schemas/CurrencyType'
        price:
          type: number
          format: float
          description: Base price for given room type for one night and one person.
        roomTypeIds:
          type: array
          description: List of all room types that this rate plan applies to
          minItems: 1
          maxItems: 30
          uniqueItems: true
          items:
            description: RoomType id
            $ref: '#/components/schemas/ObjectIdType'
            example: '123-afg-34'
        updatedAt:
          type: string
          format: date-time
          description: Date-time when the data was last changed. Used by consumers to handle incremental updates and caching.
        availableForReservation:
          type: object
          description: A time period during which this rate plan can be used to compute prices for a booking, i. e. a hotel can have different rate plans that are used for reservations for the same date that are placed in different months. If this restriction is not set, the rate plan can be used for booking with no time restriction.
          required:
          - from
          - to
          properties:
            from:
              type: string
              format: date-time
            to:
              type: string
              format: date-time
        availableForTravel:
          type: object
          description: A time period of stay during which this rate plan should be used to compute prices, i. e. prices in this rate plan are applicable in August. If this restriction is not set, the rate plan can be used for booking for any time.
          required:
          - from
          - to
          properties:
            from:
              type: string
              format: date-time
            to:
              type: string
              format: date-time
        modifiers:
          type: array
          description: List of price modifiers, i. e. discounts based on length of stay. For now, the list is very limited.
          items:
            $ref: '#/components/schemas/RatePlanPriceModifier'
        restrictions:
          type: object
          description: Restrictions for this rate plan. If a booking fits all restrictions, this rate plan can be used. If no restrictions are set, rate plan can be applied at any valid time.
          properties:
            bookingCutOff:
              description: How many days in advance booking starts / ends. If not specified there is no restriction.
              type: object
              properties:
                min:
                  type: integer
                max:
                  type: integer
            lengthOfStay:
              description: How long does the stay have to be to apply this rate plan. If not specified, there is no restriction.
              type: object
              properties:
                min:
                  type: integer
                  default: 1
                max:
                  type: integer

    RatePlanPriceModifier:
      type: object
      description: A set of conditions that can affect the resulting price.
      required:
      - adjustment
      - conditions
      properties:
        adjustment:
          description: How will the resulting price be affected? In percents
          type: number
          format: float
          example: -3.1
        conditions:
          type: object
          properties:
            from:
              description: First day the modifier is applied to (including)
              type: string
              format: date
              example: "2018-01-30"
            to:
              description: Last day the modifier is applied to (including)
              type: string
              format: date
              example: "2018-02-20"
            minLengthOfStay:
              description: Minimal length of stay the modifer is applicable to. If there are multiple modifiers with lengthOfStay condition matching the minimal length of stay, the price for the longest length of stay is used.
              type: integer
            maxAge:
              description: The modifier is applicable to occupants of this age or younger at the time of arrival to the stay. If multiple modifiers are specified with different maxAge, the modifier with the lowest fitting limit is applied.
              type: integer
            minOccupants:
              description: The modifier is applicable if there are at least this number of persons staying in a room. If multiple modifiers are specified with different minOccupants, the modifier with the highest fitting limit is applied.
              type: integer
          
    Availability:
      description: Full snapshot of availability in time of `updatedAt`
      type: object
      required:
      - updatedAt
      - roomTypes
      properties:
        updatedAt:
          type: string
          format: date-time
        roomTypes:
          description: Object where property names are roomTypeId
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/AvailabilityForDay'
    AvailabilityForDay:
      type: object
      required:
      - date
      - quantity
      properties:
        date:
          description: The date the availability is for
          type: string
          format: date
        quantity:
          description: Number of free resources to book for the day
          type: integer
        restrictions:
          $ref: '#/components/schemas/AvailabilityRestrictions'

    AvailabilityRestrictions:
      description: Possible restrictions (this is not exhaustive and we might add more options in the future)
      type: object
      properties:
        noArrival:
          type: boolean
          description: It's not possible to arrive on this date
        noDeparture:
          type: boolean
          description: It's not possible to depart on this date

    CancellationPolicy:
      title: Cancellation policy
      type: object
      description: What is the penalty when a guest wants to cancel a reservation.
      required:
      - amount
      properties:
        from:
          description: After which date does this cancellation policy apply (including). If not present, this policy applies since the beginning of time.
          type: string
          format: date-time
          example: "2018-01-30"
        to:
          description: Before which date does this cancellation policy apply(including). If not present, this policy applies until the end of the universe.
          type: string
          format: date-time
          example: "2018-02-20"
        deadline:
          type: integer
          description: How many days before arrival does this first apply. If not present, this policy applies any time.
          example: 30
        amount:
          type: number
          format: float
          description: Cost of cancellation in percents of the final price, 100 means non refundable. This means how much money will the hotel keep.
          example: 25

  # basic elements
    HotelAmenityItem:
      title: Hotel amenity
      description: Products and services offered to guests for free. The list is an example, TODO - define real values
      type: string
    RoomAmenityItem:
      title: Room amenity
      description: Room amenity - the possible values are example only. TODO - define real list of important amenity types. 
      type: string

    Location:
      title: GPS location
      type: object
      description: GPS location in decimal format (ISO 6709)
      required:
      - latitude
      - longitude
      properties:
        latitude:
          type: number
          format: float
          example: 35.89421911
        longitude:
          type: number
          format: float
          example: 139.94637467
    Contact:
      title: Contact
      type: object
      properties:
        email:
          description: E-mail contact
          type: string
          format: email
          example: joseph.urban@example.com
          maxLength: 150
        phone:
          description: Phone number (with country prefix)
          type: string
          maxLength: 18
          example: +44123456789
        url:
          description: Url to the contact web page
          type: string
          format: uri
        ethereum:
          description: Address of wallet on Ethereum
          $ref: '#/components/schemas/EthereumAddressType'
        additionalContacts:
          description: More contact options, such as Whatsapp, WeChat, Telegram, twitter handle, facebook address. Once we see high demand for a particular type of contact, we can promote them to regular contact types. 
          type: array
          items:
            type: object
            required:
            - title
            - value
            properties:
              title:
                description: Name of this contact options
                type: string
              value:
                description: The actual contact
                type: string

    Address:
      title: Postal address
      type: object
      required:
      - line1
      - city
      - country
      properties:
        line1:
          type: string
          maxLength: 150
        line2:
          type: string
          maxLength: 150
        postalCode:
          type: string
          maxLength: 10
        city:
          type: string
          maxLength: 150
        state:
          type: string
          maxLength: 150
        country:
          type: string
          maxLength: 2
          minLength: 2
          description: ISO 3166-1 alpha-2 codes
          
  # elementary schemas
  
    DescriptionType:
      title: Markdown description
      description: Text description in simple Markdown format (bold, italic, titles, line break and paragraph format). Particular flavour of markdown is yet to be decided.
      type: string
      maxLength: 3000
    NameType:
      title: Entity name
      description: Human readable name identifying an entity (shown to users in search results, hotel/room details, etc)
      type: string
      maxLength: 150
    ObjectIdType:
      title: ID
      description: Vendor string ID
      type: string
      maxLength: 100
      example: '1234-abcd'
    UriType:
      title: URI
      description: URI for linking resources. The maximal length is 1500 to save space.
      type: string
      format: uri
      maxLength: 1500
    CurrencyType:
      title: Currency code
      type: string
      minLength: 3
      maxLength: 3
      description: Three letter ISO 4217 currency code.
    TimezoneType:
      title: Timezone code
      description: Timezone name according to https://www.iana.org/time-zones (refer to zone.tab)
      type: string
      maxLength: 40
    EthereumAddressType:
      title: Ethereum address
      type: string
      description: Ethereum address in hexadecimal format (with leading 0x) or an ENS name.
      maxLength: 300
